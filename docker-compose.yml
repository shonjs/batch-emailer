version: '3'
services:
  db:
    restart: always
    image: mysql:latest
    environment:
      MYSQL_DATABASE: 'db'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - '3307:3306'
    volumes:
      - mysql-db:/var/lib/mysql
    
  kafka:
   restart: always
   image: 'bitnami/kafka:3.5'
   ports:
    - "9094:9094"
   volumes:
     - "kafka-volume:/bitnami"
   environment:
    - KAFKA_CFG_NODE_ID=0
    - KAFKA_CFG_PROCESS_ROLES=controller,broker
    - KAFKA_CFG_LISTENERS=INTERNAL://:9092,CONTROLLER://:9093,EXTERNAL://localhost:9094
    - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:9092,EXTERNAL://localhost:9094
    - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
    - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
    - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
  
  kafka-init:
   image: 'bitnami/kafka:3.5'
   depends_on:
     kafka:
       condition: service_started
   command: ["/bin/bash", "-c", "/create-topics.sh"]
   volumes:
     - type: bind
       source: ./create-topics.sh
       target: /create-topics.sh
   init: true
   environment:
     - TOPIC_NAME=mail-topic

  backend:
    image: backend
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    ports:
      - "3001:3001"
    working_dir: /usr/src/app
    volumes:
      - ./backend/src:/usr/src/app/src
    command: ["npm", "run", "start:dev"]
    environment:
     - DB_HOST=db
     - DB_PORT=3306
     - DB_USER=user
     - DB_PASSWORD=password
     - DB_SCHEMA=db
     - MAIN_TOPIC=mail-topic
     - BATCH_SIZE=1000
     - KAFKA_HOST=kafka
     - KAFKA_PORT=9092

volumes:
  kafka-volume:
  mysql-db:
   
networks:
  batch-emailer: